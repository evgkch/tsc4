{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

(int) tlen (tuple t) asm "TLEN";
tuple empty_tuple() asm "NIL";

() recv_internal() {
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  tuple C = empty_tuple();
  int aRows = matrixA.tlen();
  int aCols = matrixA.at(0).tlen();
  ;; int bRows = matrixB.tlen();
  int bCols = matrixB.at(0).tlen();
  int r = 0;
  while (r < aRows) {
    tuple cRow = empty_tuple();
    tuple aRow = matrixA.at(r);
    int c = 0;
    while (c < bCols) {
      int s = 0;
      int sum = 0;
      while (s < aCols) {
        sum += (aRow.at(s) * matrixA.at(s).at(c));
        s += 1;
      }
      cRow~tpush(sum);
      c += 1;
    }
    C~tpush(cRow);
    r += 1;
  }
  return C;
}

